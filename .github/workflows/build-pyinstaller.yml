name: Build the Executables

on: [workflow_dispatch]

defaults:
  run:
    shell: bash

jobs:
  test:
    runs-on: ubuntu-latest
    name: "Test app"

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
        with:
          path: ./pyVoice

      - name: Setup Python 3.9.4
        uses: actions/setup-python@v2
        with:
          python-version: 3.9.4

      - name: Install APT packages
        run: |
          cd pyVoice
          sudo chmod +x scripts/setup_linux.sh
          ./scripts/setup_linux.sh

      - name: Install Poetry
        uses: snok/install-poetry@v1.1.1
        with:
          virtualenvs-path: ~/.virtualenvs
          virtualenvs-create: true
          virtualenvs-in-project: false

      - name: Install Poetry dependencies
        run: |
          cd pyVoice
          poetry install

      - name: Run pyTest
        id: pytest
        run: |
          cd pyVoice
          poetry run pytest --html=test-report.html --self-contained-html

      - name: Upload test report to artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: test-results-${{ github.sha }}
          path: pyVoice/test-report.html

      - name: Notify Success
        uses: ShaunLWM/action-pushbullet@master
        if: steps.pytest.outcome == 'success'
        env:
          PB_TOKEN: ${{ secrets.PB_TOKEN }}
          PB_TITLE: pyVoice Build  - Tests with Success
          PB_TEXT: The pyVoice repo has been tested with no errors! Going to build...

  build-linux:
    runs-on: ubuntu-latest
    name: "Build for Linux"
    needs: test

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
        with:
          path: ./pyVoice

      - name: Setup Python 3.9.4
        uses: actions/setup-python@v2
        with:
          python-version: 3.9.4

      - name: Install APT packages
        run: |
          cd pyVoice
          sudo chmod +x scripts/setup_linux.sh
          ./scripts/setup_linux.sh

      - name: Install Poetry
        uses: snok/install-poetry@v1.1.1
        with:
          virtualenvs-path: ~/.virtualenvs
          virtualenvs-create: true
          virtualenvs-in-project: false

      - name: Install Poetry dependencies
        run: |
          cd pyVoice
          poetry install

      - name: Run pyInstaller
        run: |
          cd pyVoice
          poetry run pyinstaller --noconfirm --onedir --console --icon "pyinstaller/favicon.ico" --name "pyVoice_linux" --add-data "src/data:data/" --add-data ".venv/lib/python3.9/site-packages/pyfiglet:pyfiglet/" "run.py"

      - name: ZIP the contents
        run: |
          cd pyVoice
          zip -r pyVoice-linux.zip dist/pyVoice_linux

      - name: Upload built executable to artifacts
        uses: actions/upload-artifact@v2
        with:
          name: pyVoice_linux-${{ github.sha }}
          path: pyVoice/pyVoice-linux.zip

  build-windows:
    runs-on: windows-2019
    name: "Build for Windows"
    needs: test

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
        with:
          path: ./pyVoice

      - name: Setup Python 3.9.4
        uses: actions/setup-python@v2
        with:
          python-version: 3.9.4

      - name: Install Poetry
        uses: snok/install-poetry@v1.1.1
        with:
          virtualenvs-path: ~/.virtualenvs
          virtualenvs-create: true
          virtualenvs-in-project: false

      - name: Install Poetry dependencies
        run: |
          cd pyVoice
          poetry install

      - name: Run pyInstaller
        run: |
          cd pyVoice
          poetry run pyinstaller --noconfirm --onedir --console --icon "pyinstaller/favicon.ico" --name "pyVoice_windows" --uac-admin --add-data "src/data;data/" --add-data ".venv/Lib/site-packages/pyfiglet;pyfiglet/" "run.py"

      - name: ZIP the contents
        run: |
          cd pyVoice
          powershell Compress-Archive dist/pyVoice_windows pyVoice-windows.zip

      - name: Upload built executable to artifacts
        uses: actions/upload-artifact@v2
        with:
          name: pyVoice_windows-${{ github.sha }}
          path: pyVoice/pyVoice-windows.zip

  build-mac:
    runs-on: macos-10.15
    name: "Build for MacOS"
    needs: test

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
        with:
          path: ./pyVoice

      - name: Setup Python 3.9.4
        uses: actions/setup-python@v2
        with:
          python-version: 3.9.4

      - name: Install APT packages
        run: |
          cd pyVoice
          sudo chmod +x scripts/setup_linux.sh
          ./scripts/setup_linux.sh

      - name: Install Poetry
        uses: snok/install-poetry@v1.1.1
        with:
          virtualenvs-path: ~/.virtualenvs
          virtualenvs-create: true
          virtualenvs-in-project: false

      - name: Install Poetry dependencies
        run: |
          cd pyVoice
          poetry install

      - name: Run pyInstaller
        run: |
          cd pyVoice
          poetry run pyinstaller --noconfirm --onedir --console --icon "pyinstaller/favicon.ico" --name "pyVoice_linux" --add-data "src/data:data/" --add-data ".venv/lib/python3.9/site-packages/pyfiglet:pyfiglet/" "run.py"

      - name: ZIP the contents
        run: |
          cd pyVoice
          zip -r pyVoice-linux.zip dist/pyVoice_linux

      - name: Upload built executable to artifacts
        uses: actions/upload-artifact@v2
        with:
          name: pyVoice_linux-${{ github.sha }}
          path: pyVoice/pyVoice-linux.zip

  notify:
    runs-on: ubuntu-latest
    name: "Notify"
    needs: [build-linux, build-windows, build-mac]

    steps:
      - name: Notify Pushbullet
        uses: ShaunLWM/action-pushbullet@master
        env:
          PB_TOKEN: ${{ secrets.PB_TOKEN }}
          PB_TITLE: pyVoice Build  - Success
          PB_TEXT: The build for Win, Linux and Mac has completed, no errors!
